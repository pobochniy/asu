name: Build

on: push
env:
  BUILD_DIR: buildfolder
  PUBLISH_DIR: publishfolder
  ARTIFACT_NAME: assembly
  DOTNET_VERSION: "6.0.300"
  
jobs:
  
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout 🛎️
        uses: actions/checkout@v3
      - name: setup dotnet 
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          
      - name: restore
        run: dotnet restore
      - name: build 🏗️
        run: dotnet build --no-restore -c Release -o ${{ env.BUILD_DIR }}
      - name: test 🦑
        run: dotnet test --no-restore --no-build -o ${{ env.BUILD_DIR }} ASU.sln
      - name: publish
        run: dotnet publish Api/Api.csproj -c Release -o ${{ env.PUBLISH_DIR }}

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y_%m_%d__%H_%M_%S')"
        
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker image
        uses: docker/build-push-action@v3
        with:
          push: false
          load: true
          context: ${{ env.PUBLISH_DIR }}
          tags: ${{ steps.date.outputs.date }}

      - name: Publish Docker image
        run: |
          docker login \
            --username ${{ secrets.DOCKERHUB_LOGIN }} \
            --password ${{ secrets.DOCKERHUB_PWD }}
          
          docker tag ${{ steps.date.outputs.date }}
          
          docker push \
            ${{ secrets.DOCKER_LOGIN }}/asu-api:${{ steps.date.outputs.date }}
          
          echo "### Image tag: ${{ steps.date.outputs.date }}" >> $GITHUB_STEP_SUMMARY      
          
          
#  JetBrainsInspect:
#    runs-on: ubuntu-latest
#    env:
#      DOTNET_VERSION: "6.0.300"
#    steps:
#      - name: checkout 🙈🙉🙊
#        uses: actions/checkout@v3
#      - uses: actions/setup-dotnet@v2
#        with:
#          dotnet-version: ${{ env.DOTNET_VERSION }}
#      - name: Install JetBrains GlobalTools
#        run: dotnet tool install -g JetBrains.ReSharper.GlobalTools
#      - name: Inspect
#        env:
#          Q_RESULTS: ".runs[].results[]"
#          Q_CONTENTS: "{message:.message.text, file:.locations[0].physicalLocation.artifactLocation.uri, region: .locations[0].physicalLocation.region}"
#          Q_NOTICE: '"::notice file=\(.file),line=\(.region.startLine),endLine=\(.region.endLine),col=\(.region.startColumn),endColumn=\(.region.endColumn)::\(.message)"'
#        run: |
#          mkdir inspect-out
#          echo "::group::Inspect code"
#          jb inspectcode --dotnetcoresdk=$DOTNET_VERSION -f=sarif -o=inspect-out/report.json ASU.sln
#          echo "::endgroup::"
#          jq "$Q_RESULTS | $Q_CONTENTS | $Q_NOTICE" -r inspect-out/report.json
    
    